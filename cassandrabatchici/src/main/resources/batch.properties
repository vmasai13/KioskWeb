# Placeholders batch.*
#    for HSQLDB:
batch.jdbc.driver=org.hsqldb.jdbcDriver
batch.jdbc.url=jdbc:hsqldb:mem:testdb;sql.enforce_strict_size=true
# use this one for a separate server process so you can inspect the results
# (or add it to system properties with -D to override at run time).
# batch.jdbc.url=jdbc:hsqldb:hsql://localhost:9005/samples
batch.jdbc.user=sa
batch.jdbc.password=
batch.schema=
batch.schema.script=org/springframework/batch/core/schema-hsqldb.sql


#path of the log files which needs to be parsed and filtered based on some logic
#For BLS Kiosks
kiosk.log.BLS.inputpath=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/21/data*soap_messaging.*
kiosk.log.BLS.outputfile=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/21/soap_bls.txt

#For IBM Kiosks
kiosk.log.IBM.inputpath=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/21/data*webkiosk_technical.*
kiosk.log.IBM.outputfile=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/21/technical_ibm.txt

#For testing purpose
#path of the log files which needs to be parsed and filtered based on some logic 

#output of the above applied logic on the input log files
#kiosk.log.BLS.inputpath=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/test/data_waslogs_gs_webkioskuia-webkiosk_technical.log
#kiosk.log.BLS.outputfile=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/test/testOutput_bls.txt
#kiosk.log.IBM.inputpath=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/test/soap_test.log
#kiosk.log.IBM.outputfile=file:C:/Users/X075668/Desktop/Desktop/CK/NGK Reporting/reporting logs/test/testOutput_ibm.txt


#output from the prev processing will be the input for creating CSV file 
kiosk.csv.inputpath=file:D:/chipnpin/tech/output/6feb.txt
kiosk.csv.outputfile=file:D:/chipnpin/flowcsv/6feb.csv



#path of the log files which needs to be parsed and filtered based on some logic 
#kiosk.log.inputpath=file:D:/chipnpin/flow/30jan/*.*
#output of the above applied logic on the input log files
#kiosk.log.outputfile=file:D:/chipnpin/flow/output/30jan.txt

#output from the prev processing will be the input for creating CSV file 
#kiosk.csv.inputpath=file:D:/chipnpin/flow/output/30jan.txt
#kiosk.csv.outputfile=file:D:/chipnpin/flowcsv/30jan.csv


#path of the log files which needs to be parsed and filtered based on some logic 
#kiosk.log.inputpath=file:D:/chipnpin/soap/22jan/*.*
#output of the above applied logic on the input log files
#kiosk.log.outputfile=file:D:/chipnpin/soap/output/jan22.txt

#output from the prev processing will be the input for creating CSV file 
#kiosk.csv.inputpath=file:D:/chipnpin/soap/output/jan22.txt
#kiosk.csv.outputfile=file:D:/chipnpin/soapcsv/jan22.csv

kiosk.kioskids=BLS512533,BLS512533

#mvn exec:java -Dexec.mainClass=org.springframework.batch.core.launch.support.CommandLineJobRunner -Dexec.args="launch-context.xml kioskjob"
#mvn exec:java -Dexec.mainClass=org.springframework.batch.core.launch.support.CommandLineJobRunner -Dexec.args="launch-context.xml kioskcsvjob"
#mvn exec:java -Dexec.mainClass=org.springframework.batch.core.launch.support.CommandLineJobRunner -Dexec.args="launch-context.xml kioskflowtracejob"

#mvn exec:java -Dexec.mainClass=org.springframework.batch.core.launch.support.CommandLineJobRunner -Dexec.args="launch-context.xml kioskcsvsellproductjob"

